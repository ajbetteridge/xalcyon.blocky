* About 

XALCYON is a challenging multidirectional PC shooting game with dual
analog stick control and procedurally generated levels. XALCYON is the
sequel to [[http://dto.github.com/notebook/xong.html][XONG]], and exhibits the same 80s-home-computer-game
audiovisual aesthetic that I employed in XONG.

XALCYON requires a USB or other game controller with dual analog
sticks and at least three buttons. The player uses the analog sticks
to independently control both movement and aiming/firing of his robot
as it fights through a series of increasingly difficult levels.  These
maps are randomly generated from a library of templates specifying
different terrain and enemy combinations. Once all enemies on a level
are destroyed, the gateway to the next level will appear.

As in XONG, one single hit from any bullet or enemy or explosion will
kill you and completely end the current game. However, you can simply
hit START on the joystick to generate a fresh scenario starting from
level 1. Sudden permadeath increases tension, but characters are quite
disposable, so it becomes a score challenge.

Your robot can hold and use one item at a time. The player starts the
game with a shield which blocks bullets coming from the direction the
right stick is aiming. The shield (or other item) can be activated by
pressing L1 or L2. Items are found in boxes, or left behind by smashed
enemies.

The main gun is always equipped, and can be fired by pressing or
holding R1 or R2. However, both shield and gun must consume energy to
operate. Your robot has a limited energy supply, and the gauge will
run out quickly if you use the shield for a long period (even faster
if you are also shooting the main gun.) When energy is too low, you
will not be able to use guns or shields for a few moments, and will be
highly vulnerable while you wait for it to recharge.

The player can equip a bomb instead of the shield; these explode a few
seconds after being fired, and they stick to enemies and walls. But
there are enemies that can fire bombs at you too.

"Monitors" are orange robotic drones that patrol the fortress, firing
a spread of bullets before dashing away from the player. Highly
dangerous in groups. They turn red when they're badly damaged.

Much more to come...

* Install 

Requires Blocky: http://github.com/dto/blocky

Please see the INSTALL file, and also "blocky-init.lisp" for
instructions on how to configure the joystick.

* TODO create a really proper level generation framework that auto-sizes things
** TODO [#A] area templates
** TODO archive: a few monitors in a very simple berzerky environment.
** TODO open area with 1 or 2 small base rooms with spewing monitors and radiation hazard
** TODO radiation vent chambers, simply subdivided, with guys who throw bombs at you
** TODO multi-ring concentric squares base
** TODO small rooms with item boxes so that often theres access to the bomb.
** TODO level divided into two unequal portions by a barrier with a gap, and moving enemies who spawn color creepers
** TODO [#B] allow running a turtle program in some blank world, then get bounding box for all objects and move them into place
* TODO [#B] display level number
* TODO [#B] easily distinguishable objects that reflect size-increased bullets 
* TODO [#B] boss with bullets that grow larger and faster as they approach you, but move in straight line
* TODO [#C] :target tag causes onscreen highlight (i.e. bubble)
* TODO [#C] freeze trail to create walls

* DONE sticky bomb, delay/sound before firing ala howitzer
  CLOSED: [2012-02-04 Sat 03:18]
* DONE red shields in the doors of some bases to stop player just firing bomb from distance    
  CLOSED: [2012-02-04 Sat 03:51]
* DONE redzone warning sound
  CLOSED: [2012-02-03 Fri 03:10]
* DONE shield with limited use, only faces the dir you are shooting.
  CLOSED: [2012-02-03 Fri 03:10]
* DONE as in Xong---ONE hit kills
  CLOSED: [2012-02-01 Wed 16:45]
* DONE bases move around slowly like aircraft carriers
  CLOSED: [2012-02-01 Wed 16:45]
* DONE the trail is your shield. 
  CLOSED: [2012-02-01 Wed 16:47]
* DONE player bullets have limited range
  CLOSED: [2012-02-01 Wed 20:36]
* DONE "chips" are the XP and currency (you buy upgrades/items)
  CLOSED: [2012-02-01 Wed 20:36]
* DONE chips are left behind by enemies or found in crates
  CLOSED: [2012-02-01 Wed 20:36]
* DONE level completion when all targets/bases are destroyed
  CLOSED: [2012-02-02 Thu 15:00]
* DONE non-moving bases that spawn enemies
  CLOSED: [2012-02-02 Thu 15:00]
* DONE display word "WIN" or "LOES" 
  CLOSED: [2012-02-02 Thu 09:19]
* DONE energy meter
  CLOSED: [2012-02-02 Thu 17:41]
* DONE sweeping the trail across bouncing Chip particles is the only way to pick them up
  CLOSED: [2012-02-01 Wed 20:36]


* Design doc (outdated)

MicroXONG is a retro-remake of [[http://dto.github.com/notebook/xong.html][XONG]] with graphics, sound, and controls
similar to those of an Intellivison or Atari 5200 game from the bygone
era of 8-bit games, but with OpenGL transparency and scaling added to
the mix. 

You are a vulnerable white square that can move only in the four
cardinal directions (using the arrow keys, numpad, or gamepad). Using
the spacebar (or joystick button) you can fire a bullet in the
direction you last moved. (This direction is indicated by a little dot
on the player's sprite.) 

One hit kills you, and completely ends your game---to win at MicroXONG
you must reach the end without taking a single bullet from an enemy or
touching a single hot zone. A successful game of SuperXONG should be
able to be completed in less than 20 minutes. Player lives are
disposable, and pressing ESCAPE after death will instantly begin a new
game.

You must infiltrate an enemy research facility with four increasingly
difficult levels. Each level is semi-randomly generated as in a
roguelike, but levels are not entirely grid-based. Your goal is to
defeat all enemies, retrieve one or more encrypted data files, and
transmit them back to your home base at a terminal located somewhere
on each level. Each transmission results in a random bit of story
being shown to the player in the form of a fictional email, and a
story could be sketched in this way with a small library of these
emails.

Your character is trailed by a positronic filament "tail" (represented
by a yellow line following your square) which can destroy bullets and
certain other moving objects. By sweeping the filament across the path
of an oncoming particle or bullet, you can annihilate them and reduce
the danger level. The tail is not overly long (this would make the
game too easy) and cannot be extended.

An energy meter is shown at the bottom corner of the game window as a
segmented horizontal bar with an E next to it. Energy is required to
fire your bullets, and when your energy is too low, the tail shield
will not function and you will be more vulnerable.

You can regain energy by grabbing an "E" powerup (these should be
somewhat scarce) or by absorbing particles with your tail.

Your bullets bounce back and forth along a line (either horizontal or
vertical.) You can catch your own bullets, which restores an
equivalent amount of energy. So part of the strategy will be in
destroying colorful blocks and/or objects in paddle-and-brick-game
fashion.

Your bullets don't directly kill enemies---instead you must trigger
bombs when they pass by, or direct the enemies into incinerators.

There are forcefield doors between some rooms that open when shot with
a bullet, and close after a few seconds. Colliding with the forcefield
kills you.

Player speed should be 1 pixel when shift is held (use in danger areas.)

** Difficulty A/B








